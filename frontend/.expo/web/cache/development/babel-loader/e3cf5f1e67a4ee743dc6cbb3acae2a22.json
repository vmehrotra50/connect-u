{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MapPicker from \"react-native-map-picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar AddEvent = function (_React$Component) {\n  _inherits(AddEvent, _React$Component);\n\n  var _super = _createSuper(AddEvent);\n\n  function AddEvent(props) {\n    var _this;\n\n    _classCallCheck(this, AddEvent);\n\n    _this.state = {\n      title: \"\",\n      description: \"\",\n      datetime: \"\",\n      latitude: 0,\n      longitude: 0,\n      visible: _this.props.visible\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AddEvent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.centeredView\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.visible\n      }, React.createElement(Text, null, \"Title:\"), React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            title: text\n          });\n        }\n      }), React.createElement(Text, null, \"Description:\"), React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            description: text\n          });\n        }\n      }), React.createElement(Text, null, \"Date/Time:\"), React.createElement(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: this.state.datetime,\n        mode: \"datetime\",\n        is24Hour: true,\n        display: \"default\",\n        onChange: function onChange(datetime) {\n          return _this2.setState({\n            datetime: datetime\n          });\n        }\n      }), React.createElement(MapPicker, {\n        initialCoordinate: {\n          latitude: 37.78825,\n          longitude: -122.4324\n        },\n        onLocationSelect: function onLocationSelect(_ref) {\n          var latitude = _ref.latitude,\n              longitude = _ref.longitude;\n          return _this2.setState({\n            latitude: latitude,\n            longitude: longitude\n          });\n        }\n      })));\n    }\n  }]);\n\n  return AddEvent;\n}(React.Component);\n\nexport default AddEvent;","map":{"version":3,"sources":["/Users/varunmehrotra/Documents/GitHub/connect-u/frontend/components/AddEvent.js"],"names":["React","Component","MapPicker","DateTimePicker","AddEvent","props","state","title","description","datetime","latitude","longitude","visible","styles","centeredView","text","setState"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;IAEMC,Q;;;;;AACF,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,QAAQ,EAAE,CAJD;AAKTC,MAAAA,SAAS,EAAE,CALF;AAMTC,MAAAA,OAAO,EAAE,MAAKP,KAAL,CAAWO;AANX,KAAb;AADgB;AASnB;;;;WAMD,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACI,oBAAC,KAAD;AAAO,QAAA,aAAa,EAAC,OAArB;AACE,QAAA,WAAW,EAAE,IADf;AAEE,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWM;AAFtB,SAGI,oBAAC,IAAD,iBAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,sBAACG,IAAD;AAAA,iBAAU,MAAI,CAACC,QAAL,CAAc;AAAET,YAAAA,KAAK,EAAEQ;AAAT,WAAd,CAAV;AAAA;AAAzB,QAJJ,EAKI,oBAAC,IAAD,uBALJ,EAMI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,iBAAU,MAAI,CAACC,QAAL,CAAc;AAAER,YAAAA,WAAW,EAAEO;AAAf,WAAd,CAAV;AAAA;AAAzB,QANJ,EAOI,oBAAC,IAAD,qBAPJ,EAQI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAC,gBADX;AAEI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,QAFtB;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,QAAQ,EAAE,IAJd;AAKI,QAAA,OAAO,EAAC,SALZ;AAMI,QAAA,QAAQ,EAAE,kBAACA,QAAD;AAAA,iBAAc,MAAI,CAACO,QAAL,CAAc;AAAEP,YAAAA,QAAQ,EAAEA;AAAZ,WAAd,CAAd;AAAA;AANd,QARJ,EAgBI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE;AACfC,UAAAA,QAAQ,EAAE,QADK;AAEfC,UAAAA,SAAS,EAAE,CAAC;AAFG,SADvB;AAKI,QAAA,gBAAgB,EAAE;AAAA,cAAED,QAAF,QAAEA,QAAF;AAAA,cAAYC,SAAZ,QAAYA,SAAZ;AAAA,iBAAyB,MAAI,CAACK,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,YAAAA,SAAS,EAAEA;AAAjC,WAAd,CAAzB;AAAA;AALtB,QAhBJ,CADJ,CADJ;AA4BH;;;;EA7CkBX,KAAK,CAACC,S;;AAgD7B,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TextInput, Modal, Button } from 'react-native';\nimport MapPicker from \"react-native-map-picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nclass AddEvent extends React.Component {\n    constructor (props) {\n        this.state = {\n            title: \"\",\n            description: \"\",\n            datetime: \"\",\n            latitude: 0,\n            longitude: 0,\n            visible: this.props.visible\n        };\n    }\n\n    changeVisible = (visible) => {\n        this.setState({ visible: !visible });\n    }\n\n    render() {\n        return ( // form stuff goes here\n            <View style={styles.centeredView}>\n                <Modal animationType=\"slide\"\n                  transparent={true}\n                  visible={this.state.visible}>\n                    <Text>Title:</Text>\n                    <TextInput onChangeText={(text) => this.setState({ title: text })} />\n                    <Text>Description:</Text>\n                    <TextInput onChangeText={(text) => this.setState({ description: text })} />\n                    <Text>Date/Time:</Text>\n                    <DateTimePicker\n                        testID=\"dateTimePicker\"\n                        value={this.state.datetime}\n                        mode=\"datetime\"\n                        is24Hour={true}\n                        display=\"default\"\n                        onChange={(datetime) => this.setState({ datetime: datetime })} />\n\n                    <MapPicker\n                        initialCoordinate={{\n                            latitude: 37.78825,\n                            longitude: -122.4324,\n                        }}\n                        onLocationSelect={({latitude, longitude})=>this.setState({ latitude: latitude, longitude: longitude})}\n                    />\n                </Modal>\n            </View>\n        );\n    }\n}\n\nexport default AddEvent;"]},"metadata":{},"sourceType":"module"}