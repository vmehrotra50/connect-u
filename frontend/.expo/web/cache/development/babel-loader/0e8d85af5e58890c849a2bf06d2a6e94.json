{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"buttonText\", \"buttonStyle\", \"textStyle\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport styles from \"./Styles/LocationPicker\";\nvar DEFAULT_DELTA = {\n  latitudeDelta: 0.015,\n  longitudeDelta: 0.0121\n};\n\nvar LocationPicker = function (_Component) {\n  _inherits(LocationPicker, _Component);\n\n  var _super = _createSuper(LocationPicker);\n\n  function LocationPicker() {\n    var _this;\n\n    _classCallCheck(this, LocationPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loading: true,\n      coordinate: _objectSpread(_objectSpread({}, DEFAULT_DELTA), _this.props.initialCoordinate),\n      marker: _this.props.initialCoordinate\n    };\n\n    _this.setPosition = function (_ref) {\n      var latitude = _ref.latitude,\n          longitude = _ref.longitude;\n\n      _this.setState({\n        loading: false,\n        coordinate: _objectSpread(_objectSpread({}, DEFAULT_DELTA), {}, {\n          latitude: latitude,\n          longitude: longitude\n        }),\n        marker: {\n          latitude: latitude,\n          longitude: longitude\n        }\n      });\n    };\n\n    _this.getSelectedPosition = function () {\n      var coordinate = _this.state.coordinate;\n      var latitude = coordinate.latitude,\n          longitude = coordinate.longitude;\n      return {\n        latitude: latitude,\n        longitude: longitude\n      };\n    };\n\n    _this._getCurrentLocation = function () {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.setPosition(position.coords);\n      }, function (error) {\n        _this.setState({\n          error: error.message\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 200000,\n        maximumAge: 1000\n      });\n    };\n\n    _this.getCurrentPosition = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (Platform.OS === 'android') {\n                _this.requestLocationPermission();\n              } else {\n                _this._getCurrentLocation();\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onMarkerDragEnd = function (e) {\n      var coordinate = e.nativeEvent.coordinate;\n\n      _this.setPosition(coordinate);\n    };\n\n    _this.onMapPress = function (e) {\n      var coordinate = e.nativeEvent.coordinate;\n\n      _this.setPosition(coordinate);\n    };\n\n    _this.onSelect = function () {\n      var onLocationSelect = _this.props.onLocationSelect;\n      if (typeof onLocationSelect === 'function') onLocationSelect(_this.getSelectedPosition());\n    };\n\n    _this.getIndicator = function () {\n      return React.createElement(View, {\n        style: styles.indicatorContainer\n      }, React.createElement(ActivityIndicator, {\n        size: 'large'\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(LocationPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var initialCoordinate = this.props.initialCoordinate;\n      if (initialCoordinate) this.setPosition(initialCoordinate);else this.getCurrentPosition();\n    }\n  }, {\n    key: \"requestLocationPermission\",\n    value: function requestLocationPermission() {\n      var granted;\n      return _regeneratorRuntime.async(function requestLocationPermission$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));\n\n            case 3:\n              granted = _context2.sent;\n\n              if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n                this._getCurrentLocation();\n\n                console.log('Location permission granted');\n              } else {\n                console.log('Location permission denied');\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.warn(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n\n      var _this$props = this.props,\n          buttonText = _this$props.buttonText,\n          buttonStyle = _this$props.buttonStyle,\n          textStyle = _this$props.textStyle,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      return loading ? this.getIndicator() : React.createElement(View, {\n        style: styles.container\n      }, React.createElement(MapView, _extends({\n        provider: PROVIDER_GOOGLE,\n        style: styles.mapView,\n        initialRegion: this.state.coordinate,\n        minZoomLevel: 16,\n        onPress: this.onMapPress\n      }, props), React.createElement(Marker, {\n        draggable: true,\n        coordinate: this.state.marker,\n        onDragEnd: this.onMarkerDragEnd\n      })), React.createElement(View, {\n        style: styles.selectBtnContainer\n      }, React.createElement(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.selectBtn), buttonStyle),\n        onPress: this.onSelect\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.selectBtnText), textStyle)\n      }, buttonText))));\n    }\n  }]);\n\n  return LocationPicker;\n}(Component);\n\nLocationPicker.propTypes = {\n  initialCoordinate: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  buttonText: PropTypes.string,\n  buttonStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  onLocationSelect: PropTypes.func\n};\nLocationPicker.defaultProps = {\n  buttonText: 'Select Location',\n  buttonStyle: {},\n  textStyle: {},\n  onLocationSelect: function onLocationSelect(coordinates) {\n    return {};\n  }\n};\nexport { LocationPicker as default };","map":{"version":3,"sources":["/Users/varunmehrotra/Documents/GitHub/connect-u/frontend/node_modules/react-native-map-picker/src/LocationPicker.js"],"names":["React","Component","PropTypes","MapView","PROVIDER_GOOGLE","Marker","styles","DEFAULT_DELTA","latitudeDelta","longitudeDelta","LocationPicker","state","loading","coordinate","props","initialCoordinate","marker","setPosition","latitude","longitude","setState","getSelectedPosition","_getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","error","message","enableHighAccuracy","timeout","maximumAge","Platform","OS","requestLocationPermission","onMarkerDragEnd","e","nativeEvent","onMapPress","onSelect","onLocationSelect","getIndicator","indicatorContainer","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","granted","RESULTS","GRANTED","console","log","warn","buttonText","buttonStyle","textStyle","container","mapView","selectBtnContainer","selectBtn","selectBtnText","propTypes","shape","number","isRequired","string","object","func","defaultProps","coordinates"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ActivityIndicator, TouchableOpacity, View, Text, Platform, PermissionsAndroid } from 'react-native'\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps'\nimport styles from './Styles/LocationPicker'\n\nconst DEFAULT_DELTA = {latitudeDelta: 0.015, longitudeDelta: 0.0121}\n\nexport default class LocationPicker extends Component {\n    static propTypes = {\n        initialCoordinate: PropTypes.shape({\n            latitude: PropTypes.number.isRequired,\n            longitude: PropTypes.number.isRequired\n        }),\n        buttonText: PropTypes.string,\n        buttonStyle: PropTypes.object,\n        textStyle: PropTypes.object,\n        onLocationSelect: PropTypes.func\n    }\n\n    static defaultProps = {\n        buttonText: 'Select Location',\n        buttonStyle: {},\n        textStyle: {},\n        onLocationSelect: (coordinates) => ({}),\n    }\n\n    state = {\n        loading: true,\n        coordinate: {\n            ...DEFAULT_DELTA,\n            ...this.props.initialCoordinate\n        },\n        marker: this.props.initialCoordinate,\n    }\n\n    componentDidMount () {\n        const {initialCoordinate} = this.props\n        if (initialCoordinate)\n            this.setPosition(initialCoordinate)\n        else\n            this.getCurrentPosition()\n    }\n\n    setPosition = ({latitude, longitude}) => {\n        this.setState({\n            loading: false,\n            coordinate: {\n                ...DEFAULT_DELTA,\n                latitude,\n                longitude\n            },\n            marker: {\n                latitude,\n                longitude\n            }\n        })\n    }\n\n    getSelectedPosition = () => {\n        const {coordinate} = this.state\n        const {latitude, longitude} = coordinate\n        return {\n            latitude,\n            longitude\n        }\n    }\n\n    async requestLocationPermission () {\n        try {\n            const granted = await PermissionsAndroid.request(\n                PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n            )\n\n            if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n                this._getCurrentLocation()\n                console.log('Location permission granted')\n            } else {\n                console.log('Location permission denied')\n            }\n        } catch (err) {\n            console.warn(err)\n        }\n    }\n\n    _getCurrentLocation = () => {\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                this.setPosition(position.coords)\n            },\n            (error) => {\n                this.setState({error: error.message})\n            },\n            {enableHighAccuracy: true, timeout: 200000, maximumAge: 1000},\n        )\n    }\n\n    getCurrentPosition = async () => {\n        if (Platform.OS === 'android') {\n            this.requestLocationPermission()\n        } else {\n            this._getCurrentLocation()\n        }\n    }\n\n    onMarkerDragEnd = (e) => {\n        const {coordinate} = e.nativeEvent\n        this.setPosition(coordinate)\n    }\n\n    onMapPress = (e) => {\n        const {coordinate} = e.nativeEvent\n        this.setPosition(coordinate)\n    }\n\n    onSelect = () => {\n        const {onLocationSelect} = this.props\n        if (typeof onLocationSelect === 'function')\n            onLocationSelect(this.getSelectedPosition())\n    }\n\n    getIndicator = () => {\n        return (\n            <View style={styles.indicatorContainer}>\n                <ActivityIndicator size={'large'}/>\n            </View>\n        )\n    }\n\n    render () {\n        const {loading} = this.state\n        const {buttonText, buttonStyle, textStyle, ...props} = this.props\n        return (\n            loading\n                ? this.getIndicator()\n                : <View style={styles.container}>\n                    <MapView\n                        provider={PROVIDER_GOOGLE}\n                        style={styles.mapView}\n                        initialRegion={this.state.coordinate}\n                        minZoomLevel={16}\n                        onPress={this.onMapPress}\n                        {...props}>\n                        <Marker draggable\n                                coordinate={this.state.marker}\n                                onDragEnd={this.onMarkerDragEnd}\n                        />\n                    </MapView>\n                    <View style={styles.selectBtnContainer}>\n                        <TouchableOpacity style={{...styles.selectBtn, ...buttonStyle}} onPress={this.onSelect}>\n                            <Text style={{...styles.selectBtnText, ...textStyle}}>{buttonText}</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}